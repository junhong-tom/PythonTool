可參考文件:

網址:
1.  Python Cookbook 3rd Edition Documentation     https://python3-cookbook.readthedocs.io/zh_CN/latest/index.html 


RequirePackages 目錄:
紀錄: 使用 requirements.txt 管理套件相依性


SpeechRecognition 目錄:
紀錄: 使用 SpeechRecognition 套件，把語音轉譯成文字 
抱歉遺漏參考出處，會努力補上。

YTDownload 目錄:
1. YT Chanel: 可能會存在下載爭議，因此下載內容研究完後將刪除
2. 實作參考網址: https://swf.com.tw/?p=1357
3. 使用 validators 及  pytube 套件。 (1) 檢查有效網址 (2) 下載 YT 套件。

Folium 目錄:
1. 地圖視覺化套件
2. 實作參考網址: https://blog.yeshuanova.com/2017/10/python-visulization-folium/



Gitpython 套件
import git 
try:
    repoLab01 = git.Repo.clone_from(url=GitRepoUrl,to_path=ToPath)
except:
    repoLab01 = git.Repo(ToPath)
    
remote_origin = repoLab01.remotes.origin
out = remote_origin.pull()
  
def ConvertString(context):
#     context = "\\345\\260\\210\\345\\215\\200"
    context = f"b'{context}'"  # 这时候 a = "b'\\346\\254\\242'"
    context = eval(context) # 执行这步后， a = b"\346\254\242"
    context = str(context,encoding="utf-8") # 将字节转换成字符串
    return context.replace('"','')

fileList=[]
for _ in list(repoLab01.iter_commits()):

    for _subitem in _.stats.files.keys():        
        
        filePath = os.path.join(ToPath,ConvertString(_subitem))

        if os.path.exists(filePath):
            fileList.append(ConvertString(_subitem))

print(fileList)

git_log = repoLab01.iter_commits()
git_log

for item in git_log:
    print(item)
    print("message: "+item.message)
    print("hexsha: "+item.hexsha)
    #files = repoLab01.git.show("--pretty=","--name-only",item.hexsha)
    files = repoLab01.git.show("--pretty=","--name-only",item.hexsha)
    print(files)
    print("  ===Next===   \n")
    


# Python Sqlite 知識
Python SQL 資料庫 : 數據持久化 全攻略 | SQLite x MySQL x SQLAlchemy | 人生苦短 我用 Python 【Gamma Ray 軟體工作室】
閱讀紀錄
https://www.youtube.com/watch?v=bgFuVih778w

步驟  Sqlite ==> 檔案 IO 
1.  創建檔案 -- 副檔名為 .db 或 .sqlite
2.  工具: • DB Browser for SQLite - https://sqlitebrowser.org/
3.  import sqlite3 #導入套件
    connectingObject = sqlite3.connect(FileName) # 連線
    cursor = connectingObject.cursor() # 操作
    cursor.execute(資料庫語法) # 語法執行
    records = cursor.fetchall() # 結果
    cursor.close()
    connectingObject.close()
    
#  python 關於 MYSQL 套件 (服務器)
pymysql
mysql connector
mysqldb

# SQLALchemy SQL 物件框架 object Relational Mapping (ORM)
程式中的物件 對應到  資料庫的 Table
對物件進行 增刪改查 相當於 對資料庫的資料表進行 增刪改查
    
    
